---
name: Test
"on":
  push:
    branches: main
  pull_request:
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version-file: .node-version
          cache: npm
      - uses: actions/setup-python@v4
        with:
          cache: pipenv
      - run: |
          npm ci
          python -m pip install --upgrade pip
          python -m pip install pipenv
          python -m pipenv sync --dev
      - name: "Lint: credentials"
        run: npx secretlint "**/*"
      - name: "Lint: text (prose)"
        uses: errata-ai/vale-action@v2
        with:
          files: >
            ["README.md", "docs/CONTRIBUTING.md", "docs/SECURITY.md",
            ".github/PULL_REQUEST_TEMPLATE.md", ".github/ISSUE_TEMPLATE"]
          reporter: github-check
          fail_on_error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: "Lint: npm"
        run: npm run lint
      - name: "Lint: Git commit message"
        # Skip commitlint if a commit is created by Dependabot.
        # Because a line length of a commit message created by Dependabot often
        # exceeds 100 characters.
        if: github.actor != 'dependabot[bot]'
        uses: wagoid/commitlint-github-action@v5
        with:
          configFile: .commitlintrc.yml
      - name: "Lint: YAML"
        uses: karancode/yamllint-github-action@v2.1.1
        with:
          yamllint_strict: true
      - name: "Lint: shell script"
        uses: ludeeus/action-shellcheck@master
        with:
          ignore_paths: .husky/_ node_modules
      - name: "Lint: GitHub Actions workflow"
        # yamllint disable rule:line-length
        run: |
          bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash)
          ./actionlint -color
        # yamllint enable rule:line-length
        shell: bash
      - name: "Lint: Python"
        run: python -m pipenv run lint
# yamllint disable rule:comments-indentation
  # If this is an npm project and package.json has build or test script,
  # uncomment the following jobs.
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          cache: pipenv
      - run: |
          python -m pip install --upgrade pip
          python -m pip install pipenv
          python -m pipenv sync --dev
      - run: bin/build.sh
  # test:
  #   name: Test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-python@v4
  #       with:
  #         cache: pipenv
  #     - run: |
  #         python -m pip install --upgrade pip
  #         python -m pip install pipenv
  #         python -m pipenv sync --dev
  #     - run: python -m pipenv test
# yamllint enable rule:comments-indentation
